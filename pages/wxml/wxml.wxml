
<!-- 1、 wxml的格式 -->
<!-- <view></view>
<input/>
<image/> -->

<!-- 2、Mustache -->
<view>{{message}}</view>
<view>{{firstname}} {{lastaname}}</view>
<view>{{firstname+' '+lastaname}}</view>
<view>{{age >= 18 ? '成年人' : '未成年人'}}</view> <!-- 三目语法 -->
<!-- 时间 -->
<view>{{newTime}}</view>

<!-- 3、动态绑定 -->
<button size="mini" bindtap="handleSwitchColor">切换颜色</button>
<view class='box {{isActive ? "active" :""}}'>猪八戒</view>

<view>-----------------条件判断-----------------------</view>
<!-- 4、 wx:if的使用 -->
<button size="mini" bindtap="handleSwitchShow">切换显示</button>
<view wx:if="{{isShow}}">沙悟净</view>
<!-- wx:elif/wx:else -->
<button size="mini" bindtap="handleIncrement">分数增加5</button>
<view wx:if="{{score >= 90}}">优秀</view>
<view wx:elif="{{score >= 80}}">良好</view>
<view wx:elif="{{score >= 60}}">及格</view>
<view wx:else>不及格</view>

<!-- 5、hidden  属性-->
<!-- 区别：
        hidden ：将一个组件隐藏起来时，该组件依然保存在(display:none)
        wx:if : 将一个组件隐藏起来时，该组件根本不存在（压根没有创建）
     选择：
        如果显示和隐藏切换的频繁非常高，选择使用hidden
        如果显示和隐藏切换的频繁非常低，选择使用wx:if
 -->
<view>----------------------------------------</view>
<view hidden="{{false}}">我是hidden属性内容</view>
<view wx:if="{{false}}">我是wx:if属性内容</view>
<view>----------------------------------------</view>
<view hidden="{{true}}">我是hidden属性内容</view>
<view wx:if="{{true}}">我是wx:if属性内容</view>

<view>--------------列表渲染-------------------</view>
<!-- 6、wx:for 的回顾 -->
<!-- 1.1遍历数组/字符串/数字 -->
<!-- <view wx:for="{{['abc','bac','cba']}}">{{item}}  {{index}}</view>
<view wx:for="玉皇大帝">{{item}} {{index}}</view>
<view wx:for="{{10}}">{{item}}</view> -->

<!-- 1.2、block: 并不是一个组件，他仅仅只是一个包装元素，不会在页面中做任何渲染，只接收控制属性 
  如：wx:if   wx:for
  1)将需要进行便利或者判断的内容进行包裹
  2)将遍历和判断的属性放在block标签中，不影响普通属性的阅读，提高代码的可读性-->

<!-- <block wx:if="{{isShow}}">
  <button>按钮</button>
  <view>嗯</view>
  <view>内容</view>
</block>

<block wx:for="{{1}}">
  <button>按钮</button>
  <view>嗯</view>
  <view>内容</view>
</block> -->

<!-- 1.3: item index 起名字 -->
<!-- <view wx:for="{{arr}}" wx:for-item="ar" wx:for-index="i">{{ar}}{{i}}</view>

<block wx:for="{{nums}}" wx:for-item="num">
  <block wx:for="{{num}}">
     <view>{{item}}</view>
  </block>
</block> -->

<!-- 1.4:key的作用    -->
<!-- 如果用index仅仅是消除警告 -->
<!-- <view wx:for="{{letters}}" wx:key="{{item}}">{{item}}</view> -->

<view>--------------template  模板使用-----------------</view>
<!-- 之前的时候小程序不支持自定义组件，为了进行代码的复用，template -->
<!-- 模板中包裹的内容，在没有被使用前，是不会进行任何渲染的 -->
<!-- 方式1 -->
<!-- <template name="contentItem">
  <button size="mini">按钮</button>
  <view>嘻嘻</view>
</template>
<template is="contentItem"></template> -->
<!-- 方式2 -->
<template name="contentItem">
  <button size="mini">{{btntext}}</button>
  <view>{{context}}</view>
</template>
<template is="contentItem" data="{{btntext: '按钮', context:'哈哈哈'}}"></template>
<template is="contentItem" data="{{btntext: '按钮', context:'哈哈哈'}}"></template>
